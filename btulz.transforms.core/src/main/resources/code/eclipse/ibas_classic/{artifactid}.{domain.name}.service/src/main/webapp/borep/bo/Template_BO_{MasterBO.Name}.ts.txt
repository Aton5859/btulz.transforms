/**
 * @license
 * Copyright color-coding studio. All Rights Reserved.
 *
 * Use of this source code is governed by an Apache License, Version 2.0
 * that can be found in the LICENSE file at http://www.apache.org/licenses/LICENSE-2.0
 */

import {
    emYesNo,
    emDocumentStatus,
    emBOStatus,
    emApprovalStatus,
    BusinessObject,
    BusinessObjects
} from './basis/bobas/index';
import { 
    I${BO.getName()},
$BEGIN_BOITEM$
$BEGIN_BOITEM_RELATION_IS_ONETOMANY$
    I${BOItem.getName()},
    I${BOItem.getName()}s,
$END_BOITEM_RELATION_IS_ONETOMANY$
$BEGIN_BOITEM_RELATION_IS_ONETOONE$
    I${BOItem.getName()},
$END_BOITEM_RELATION_IS_ONETOONE$
$END_BOITEM$
} from '../../api/${BO.getName().toLowerCase()}/${BO.getName()}.d';

/**
* ${BO.getDescription()}
*/
export class ${BO.getName()} extends BusinessObject<${BO.getName()}> implements I${BO.getName()} {

    /**
    * 构造函数
    */
    constructor() {
        super();
    }

$BEGIN_BO_MODEL$
$BEGIN_MODEL_PROPERTY$
    private _${Property.getName(LowerCamelCase)}: ${Property.getDeclaredType()};
    /**
    * ${Property.getDescription()}
    */
    get ${Property.getName(LowerCamelCase)}(): ${Property.getDeclaredType()} {
        return this._${Property.getName(LowerCamelCase)};
    }
    set ${Property.getName(LowerCamelCase)}(value: ${Property.getDeclaredType()}) {
        this._${Property.getName(LowerCamelCase)} = value;
    }

$END_MODEL_PROPERTY$
$END_BO_MODEL$

$BEGIN_BOITEM$
$BEGIN_BOITEM_RELATION_IS_ONETOMANY$
    private _${BOItem.getName(LowerCamelCase)}s: ${BOItem.getName()}s = new ${BOItem.getName()}s(this);
    /**
    * ${BOItem.getDescription()}集合
    * 
    */
    get ${BOItem.getName(LowerCamelCase)}s(): ${BOItem.getName()}s {
        return this._${BOItem.getName(LowerCamelCase)}s;
    }
    set ${BOItem.getName(LowerCamelCase)}s(value: ${BOItem.getName()}s) {
        this._${BOItem.getName(LowerCamelCase)}s = value;
    }

$END_BOITEM_RELATION_IS_ONETOMANY$
$BEGIN_BOITEM_RELATION_IS_ONETOONE$
    private o${BOItem.getName(LowerCamelCase)}: ${BOItem.getName()} = new ${BOItem.getName()}();
    /**
    * ${BOItem.getDescription()}
    * 
    */
    get ${BOItem.getName(LowerCamelCase)}(): ${BOItem.getName()} {
        return this.o${BOItem.getName(LowerCamelCase)};
    }
    set ${BOItem.getName(LowerCamelCase)}(value: ${BOItem.getName()}) {
        this.o${BOItem.getName(LowerCamelCase)} = value;
    }

$END_BOITEM_RELATION_IS_ONETOONE$
$END_BOITEM$
}

$BEGIN_BOITEM$
/**
* ${BOItem.getDescription()}
*/
export class ${BOItem.getName()} extends BusinessObject<${BOItem.getName()}> implements I${BOItem.getName()} {
    /**
    * 构造函数
    */
    constructor() {
        super();
    }

$BEGIN_BOITEM_MODEL$
$BEGIN_MODEL_PROPERTY$
    private _${Property.getName(LowerCamelCase)}: ${Property.getDeclaredType()};
    /**
    * ${Property.getDescription()}
    */
    get ${Property.getName(LowerCamelCase)}(): ${Property.getDeclaredType()} {
        return this._${Property.getName(LowerCamelCase)};
    }
    set ${Property.getName(LowerCamelCase)}(value: ${Property.getDeclaredType()}) {
        this._${Property.getName(LowerCamelCase)} = value;
    }

$END_MODEL_PROPERTY$
$END_BOITEM_MODEL$
}

$BEGIN_BOITEM_RELATION_IS_ONETOMANY$
/**
* ${BOItem.getDescription()} 集合
*/
export class ${BOItem.getName()}s extends BusinessObjects<${BOItem.getName()}, ${BO.getName()}> implements I${BOItem.getName()}s {

    /**
     * 创建并添加子项
     */
    create(): ${BOItem.getName()} {
        let item = new ${BOItem.getName()}();
        this.add(item);
        return item;
    }

}
$END_BOITEM_RELATION_IS_ONETOMANY$
$END_BOITEM$


